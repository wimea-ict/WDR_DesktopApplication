module.exports = (sequelize, Sequelize) => {
	const Observationslip = sequelize.define('observationslip', {
  Time: {  type: Sequelize.STRING },
  Date: {  type: Sequelize.STRING },
  Station: {  type: Sequelize.INTEGER },
  // stationName: {  type: Sequelize.STRING },
  TotalAmountOfAllClouds: {  type: Sequelize.INTEGER },
  TotalAmountOfLowClouds: {  type: Sequelize.INTEGER },
  TypeOfLowClouds1: {  type: Sequelize.INTEGER },
  OktasOfLowClouds1: {  type: Sequelize.INTEGER },
  HeightOfLowClouds1: {  type: Sequelize.INTEGER },
  CLCODEOfLowClouds1: {  type: Sequelize.STRING },
  TypeOfLowClouds2: {  type: Sequelize.INTEGER },
  OktasOfLowClouds2: {  type: Sequelize.INTEGER },
  HeightOfLowClouds2: {  type: Sequelize.INTEGER },
  CLCODEOfLowClouds2: {  type: Sequelize.STRING },
  TypeOfLowClouds3: {  type: Sequelize.INTEGER },
  OktasOfLowClouds3: {  type: Sequelize.INTEGER },
  HeightOfLowClouds3: {  type: Sequelize.INTEGER },
  CLCODEOfLowClouds3: {  type: Sequelize.STRING },
  TypeOfMediumClouds1: {  type: Sequelize.INTEGER },
  OktasOfMediumClouds1: {  type: Sequelize.INTEGER },
  HeightOfMediumClouds1: {  type: Sequelize.INTEGER },
  CLCODEOfMediumClouds1: {  type: Sequelize.STRING },
  TypeOfMediumClouds2: {  type: Sequelize.INTEGER },
  OktasOfMediumClouds2: {  type: Sequelize.INTEGER },
  HeightOfMediumClouds2: {  type: Sequelize.INTEGER },
  CLCODEOfMediumClouds2: {  type: Sequelize.STRING },
  TypeOfMediumClouds3: {  type: Sequelize.INTEGER },
  OktasOfMediumClouds3: {  type: Sequelize.INTEGER },
  HeightOfMediumClouds3: {  type: Sequelize.INTEGER },
  CLCODEOfMediumClouds3: {  type: Sequelize.STRING },
  TypeOfHighClouds1: {  type: Sequelize.INTEGER },
  OktasOfHighClouds1: {  type: Sequelize.INTEGER },
  HeightOfHighClouds1: {  type: Sequelize.INTEGER },
  CLCODEOfHighClouds1: {  type: Sequelize.STRING },
  TypeOfHighClouds2: {  type: Sequelize.INTEGER },
  OktasOfHighClouds2: {  type: Sequelize.INTEGER },
  HeightOfHighClouds2: {  type: Sequelize.INTEGER },
  CLCODEOfHighClouds2: {  type: Sequelize.STRING },
  TypeOfHighClouds3: {  type: Sequelize.INTEGER },
  OktasOfHighClouds3: {  type: Sequelize.INTEGER },
  HeightOfHighClouds3: {  type: Sequelize.INTEGER },
  CLCODEOfHighClouds3: {  type: Sequelize.STRING },
  CloudSearchLightReading: {  type: Sequelize.INTEGER },
  Rainfall: {  type: Sequelize.STRING },
  Dry_Bulb: {  type: Sequelize.STRING },
  Wet_Bulb: {  type: Sequelize.STRING },
  Max_Read: {  type: Sequelize.INTEGER },
  Max_Reset: {  type: Sequelize.INTEGER },
  Min_Read: {  type: Sequelize.INTEGER },
  Min_Reset: {  type: Sequelize.INTEGER },
  Piche_Read: {  type: Sequelize.INTEGER },
  Piche_Reset: {  type: Sequelize.INTEGER },
  TimeMarksThermo: {  type: Sequelize.INTEGER },
  TimeMarksHygro: {  type: Sequelize.INTEGER },
  TimeMarksRainRec: {  type: Sequelize.INTEGER },
  Present_Weather: {  type: Sequelize.STRING },
  Present_WeatherCode: {  type: Sequelize.STRING },
  Past_Weather: {  type: Sequelize.STRING },
  Pastt_WeatherCode: {  type: Sequelize.STRING },
  Visibility: {  type: Sequelize.INTEGER },
  Wind_Direction: {  type: Sequelize.STRING },
  Wind_Speed: {  type: Sequelize.STRING },
  Gusting: {  type: Sequelize.INTEGER },
  AttdThermo: {  type: Sequelize.INTEGER },
  PrAsRead: {  type: Sequelize.INTEGER },
  Correction: {  type: Sequelize.INTEGER },
  CLP: {  type: Sequelize.STRING },
  MSLPr: {  type: Sequelize.INTEGER },
  TimeMarksBarograph: {  type: Sequelize.INTEGER },
  TimeMarksAnemograph: {  type: Sequelize.INTEGER },
  OtherTMarks: {  type: Sequelize.STRING },
  SoilMoisture: {  type: Sequelize.STRING },
  SoilTemperature: {  type: Sequelize.STRING },
  sunduration: {  type: Sequelize.STRING },
  trend: {  type: Sequelize.STRING },
  windrun: {  type: Sequelize.STRING },
  Max_temp: { type: Sequelize.STRING},
  Min_temp: { type: Sequelize.STRING},
  speciormetar: {  type: Sequelize.STRING },
  UnitOfWindSpeed: {  type: Sequelize.STRING },
  IndOrOmissionOfPrecipitation: {  type: Sequelize.STRING },
  TypeOfStation_Present_Past_Weather: {  type: Sequelize.STRING },
  HeightOfLowestCloud: {  type: Sequelize.STRING },
  StandardIsobaricSurface: {  type: Sequelize.STRING },
  GPM: {  type: Sequelize.STRING },
  DurationOfPeriodOfPrecipitation: {  type: Sequelize.STRING },
  GrassMinTemp: {  type: Sequelize.STRING },
  CI_OfPrecipitation: {  type: Sequelize.STRING },
  BE_OfPrecipitation: {  type: Sequelize.STRING },
  IndicatorOfTypeOfIntrumentation: {  type: Sequelize.STRING },
  SignOfPressureChange: {  type: Sequelize.STRING },
  Supp_Info: {  type: Sequelize.STRING },
  VapourPressure: {  type: Sequelize.STRING },
  T_H_Graph: {  type: Sequelize.STRING },
  DeviceType: {  type: Sequelize.STRING },
  SyncStatus: { type: Sequelize.ENUM('0', '1')},
  O_SubmittedBy: {  type: Sequelize.STRING },
  Remarks: {  type: Sequelize.STRING },
  Approved: {  type: Sequelize.STRING },
  ApprovedBy: {  type: Sequelize.INTEGER },
  O_CreationDate: { type: Sequelize.DATE },
  Endorsed: {  type: Sequelize.STRING },
  EndorsedBy: {  type: Sequelize.STRING }
  


	});

	return Observationslip ;
}
